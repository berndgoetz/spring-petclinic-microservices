<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.springframework.samples.petclinic.admin</groupId>
    <artifactId>spring-petclinic-admin-server</artifactId>
    <packaging>jar</packaging>
    <description>Spring Boot Admin server</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.1.RELEASE</version>
		<relativePath/>
	</parent>

    <properties>
		<java.version>11</java.version>
		<assertj.version>3.11.1</assertj.version>

		<spring-boot.version>2.3.1.RELEASE</spring-boot.version>
		<spring-cloud.version>Hoxton.SR5</spring-cloud.version>
		<wavefront.version>2.0.0-RC1</wavefront.version>

		<maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>

        <spring-boot-admin.version>2.2.2</spring-boot-admin.version>
        <docker.image.exposed.port>9090</docker.image.exposed.port>
        <docker.image.dockerfile.dir>${basedir}/../docker</docker.image.dockerfile.dir>
    </properties>

    <dependencies>
        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>

        <!-- Spring Boot Admin -->
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-server</artifactId>
            <version>${spring-boot-admin.version}</version>
        </dependency>
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-server-ui</artifactId>
            <version>${spring-boot-admin.version}</version>
        </dependency>

        <!-- Third-party librairies -->
        <dependency>
            <groupId>org.jolokia</groupId>
            <artifactId>jolokia-core</artifactId>
        </dependency>
    </dependencies>


	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.pivotal.spring.cloud</groupId>
				<artifactId>spring-cloud-services-dependencies</artifactId>
				<version>3.1.2.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.wavefront</groupId>
				<artifactId>wavefront-spring-boot-bom</artifactId>
				<version>${wavefront.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<profiles>

		<profile>
			<id>local</id>
			<dependencies>
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
					<exclusions>
						<exclusion>
							<groupId>org.springframework.cloud</groupId>
							<artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.springframework.cloud</groupId>
							<artifactId>spring-cloud-netflix-ribbon</artifactId>
						</exclusion>
						<exclusion>
							<groupId>com.netflix.ribbon</groupId>
							<artifactId>ribbon-eureka</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.springframework.cloud</groupId>
							<artifactId>spring-cloud-netflix-hystrix</artifactId>
						</exclusion>
					</exclusions>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>cloud</id>
			<dependencies>
				<!-- Spring Cloud Services -->
				<dependency>
					<groupId>io.pivotal.spring.cloud</groupId>
					<artifactId>spring-cloud-services-starter-config-client</artifactId>
				</dependency>
				<dependency>
					<groupId>io.pivotal.spring.cloud</groupId>
					<artifactId>spring-cloud-services-starter-service-registry</artifactId>
				</dependency>
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
					<exclusions>
						<exclusion>
							<groupId>org.springframework.cloud</groupId>
							<artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.springframework.cloud</groupId>
							<artifactId>spring-cloud-netflix-ribbon</artifactId>
						</exclusion>
						<exclusion>
							<groupId>com.netflix.ribbon</groupId>
							<artifactId>ribbon-eureka</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.springframework.cloud</groupId>
							<artifactId>spring-cloud-netflix-hystrix</artifactId>
						</exclusion>
					</exclusions>
				</dependency>
			</dependencies>
		</profile>


		<profile>
			<id>k8s</id>
	        <activation>
	            <activeByDefault>true</activeByDefault>
	        </activation>
			<dependencies>
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-starter-kubernetes</artifactId>
					<exclusions>
						<exclusion>
							<groupId>org.springframework.cloud</groupId>
							<artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.springframework.cloud</groupId>
							<artifactId>spring-cloud-netflix-ribbon</artifactId>
						</exclusion>
						<exclusion>
							<groupId>com.netflix.ribbon</groupId>
							<artifactId>ribbon-eureka</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.springframework.cloud</groupId>
							<artifactId>spring-cloud-netflix-hystrix</artifactId>
						</exclusion>
					</exclusions>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
</project>
